#!/usr/bin/env ruby
# purpose: wrap the kml generator to supply custom args, check for new files
$: << File.join(File.dirname(__FILE__), '..', 'lib')
require 'bundler/setup'
require 'active_support/time'

limit_waypoints = 900000
dir_piloto = "#{ENV['HOME']}/gits/piloto"
dir_files_gps = "#{ENV['HOME']}/m/rp3-piloto-1/log"
file_output = "/var/www/presence/public/piloto.kml"
file_tmp = "/tmp/piloto.kml"

# the following var is the output from: rvm env --path
system("source #{ENV['PILOTO_RVM_ENV']}")
puts "#{__FILE__} #{Time.now}"
Dir.chdir(dir_piloto)

# only run if new files are found
files = Dir.glob("#{dir_files_gps}/*.gps").sort { |a,b| File.mtime(a) <=> File.mtime(b) }
mtime_newest_file = File.mtime(files[-1])
if mtime_newest_file > (Time.now - 1.day)
  system("#{dir_piloto}/scripts/geo_cluster genkml --dir_files_gps #{dir_files_gps} --limit_waypoints #{limit_waypoints} 2> #{file_tmp} && mv -v #{file_tmp} #{file_output}")
else
  puts "skipping run, newest file is #{mtime_newest_file}" 
end
puts "#{__FILE__} #{Time.now}"
