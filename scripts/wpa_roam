#!/usr/bin/env ruby
# purpose:
# - try and get a connection to the internet via open wifi networks
# - run periodically to associate and test open wifi networks
# the plan:
# - get a list of saved open networks (without psk)
# - get a list of scanned networks
# - ping a known host, such as google.com
# -- if the ping succeeds
# --- do nothing, we have a connection to the internet
# -- if the ping fails
# --- check if the current network is an open network
# ---- if psk, do not delete 
# ---- if open, delete it

require 'bundler/setup'
require 'wpa_cli_ruby'
$: << File.join(File.dirname(__FILE__), '..', 'lib')
require 'piloto'

@host_ping = ENV['PILOTO_HOST_PING'] || 'google.com'
@regex_ssid_ignore = %r{
  ^CableWifi
  |^HP-Print
  |^TWCWifi
}x

# purpose: determine if we have internet connectivity
#          there is probably a better way to do this

def ping
  _ = `ping -c 1 #{@host_ping}`
  return $?
end

#require 'pry';binding.pry
h_ssid_current = Wpa.list_ssid_current
ssid_current = h_ssid_current ? h_ssid_current['ssid'] : 'none'

puts "#{Time.now} #{ssid_current} #{ping.success?}"


